basic commands
	pwd
	ls
	cd
	mkdir & rmdir
	rm
	touch   -creating files
	man & --help
	cp      -copy
	mv	-move
	echo	write to fle 
	chmod	permissions
	
sudo
	sudo can be used with additional options:

	-h – help; displays syntax and command options
	-V – version; displays the current version of the sudo application
	-v – validate; refresh the time limit on sudo without running a command
	-l – list; lists the user’s privileges, or checks a specific command
	-k – kill; end the current sudo privileges
	
grep [options] pattern [files]
	Options Description
	-c : This prints only a count of the lines that match a pattern
	-h : Display the matched lines, but do not display the filenames.
	-i : Ignores, case for matching
	-l : Displays list of a filenames only.
	-n : Display the matched lines and their line numbers.
	-v : This prints out all the lines that do not matches the pattern
	-e exp : Specifies expression with this option. Can use multiple times.
	-f file : Takes patterns from file, one per line.
	-E : Treats pattern as an extended regular expression (ERE)
	-w : Match whole word
	-o : Print only the matched parts of a matching line,
	 with each such part on a separate output line.

	-A n : Prints searched line and nlines after the result.
	-B n : Prints searched line and n line before the result.
	-C n : Prints searched line and n lines after before the result.
	
APT
	  list - list packages based on package names
	  search - search in package descriptions
	  show - show package details
	  install - install packages
	  reinstall - reinstall packages
	  remove - remove packages
	  autoremove - Remove automatically all unused packages
	  update - update list of available packages
	  upgrade - upgrade the system by installing/upgrading packages
	  full-upgrade - upgrade the system by removing/installing/upgrading packages
	  edit-sources - edit the source information file
	  satisfy - satisfy dependency strings
	
package installing 
	sudo apt install app_name
	pip install package name #in python
	
IDE - Sublime text	text editer advance
	subl using terminal
	
Virtual environment
	sudo  apt-get install python3.8-dev python3.8-venv
	python3 -m venv env
	source env/bin/activate

Do these exercises
apt scrapy	
	sudo apt install python3-scrapy
	scrapy shell	
	sudo apt remove python3-scrapy
	
pip scrapy
	python3 -m pip install scrapy
	python3 -m scrapy shell
	python3 -m pip uninstall scrapy
	
nano
	nano note
	
sublime installing 
	sudo apt install sublime-text

Create a python 3 virtual environment and install scrapy
	sudo  apt-get install python3.8-dev python3.8-venv
	python3 -m venv env
	source env/bin/activate
	pip install wheel 
	pip install scrapy
	scrapy shell
	
git commands
	Git config command
		git config --global user.name "ImDwivedi1"  
		git config --global user.email "Himanshudubey481@gmail.com"  
	$ git init Demo  	#for initialize an empty repository
	$ git clone URL  	#make a copy of a repository from an existing URL
	$ git add*  		#dd one or more files	
	$ git commit -m " Commit Message"  	#history with a message.
	$ git commit -a  	#ommits any files you've changed since then.
	$ git status  		#display the state of the working directory and the staging area
	$ git push [variable name] master  #anges made on the master branch,
	$ git push --all  	#pushes all the branches to the server repository.
	$ git pull URL  	#receive data from GitHub
	$ git branch		#lists all the branches
	$ git merge BranchName  #merge the specified branch
	$ git log     		#check the commit history.
	
	
